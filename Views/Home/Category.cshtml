@* This model name must match your Product model file.
    If your file is 'Product.cs', change 'Products' to 'Product' here.
*@
@model IEnumerable<NhomProject.Models.Products>

@{
    ViewData["Title"] = ViewData["CategoryName"];
    var currentSort = ViewData["CurrentSort"] as string; // Get the current sort order

}

    <link href="~/Content/Site.css" rel="stylesheet" />


<div class="container">

    <div class="category-header">
        <h2 class="section-title">@ViewData["CategoryName"]</h2>
        <p class="category-description">@ViewData["CategoryDescription"]</p>
    </div>

    <div class="sort-bar">
        @* This form re-submits the page with the new sortOrder value *@
        @using (Html.BeginForm("Category", "Home", new { id = ViewData["CategoryName"] }, FormMethod.Get))
        {
            <label for="sortOrder">Sort By:</label>
            <select name="sortOrder" id="sortOrder" class="form-control" onchange="this.form.submit()">
                <option value="name_asc" @(currentSort == "name_asc" ? "selected" : "")>Name (A-Z)</option>
                <option value="price_asc" @(currentSort == "price_asc" ? "selected" : "")>Price (Low to High)</option>
                <option value="price_desc" @(currentSort == "price_desc" ? "selected" : "")>Price (High to Low)</option>
            </select>
        }
    </div>

    <div class="product-grid">

        @if (Model.Any())
        {
            foreach (var product in Model)
            {
                <a href="@Url.Action("Details", "Home", new { id = product.ProductId })" class="product-card">

                    <div class="product-card-image">
                        <img src="@Url.Content(product.ImageUrl)" alt="@product.Name" style="width: 100%; height: 100%; object-fit: cover;" />
                    </div>

                    <div class="product-card-body">
                        <h3 class="product-card-title">@product.Name</h3>

                        <div class="product-card-price">
                            @product.Price.ToString("C")

                            @if (product.OldPrice.HasValue && product.OldPrice.Value > product.Price)
                            {
                                <span class="product-card-price-old">
                                    @product.OldPrice.Value.ToString("C")
                                </span>
                            }
                        </div>

                        <div class="product-card-rating">
                            @* Assumes your Product model has 'Rating' and 'ReviewCount' properties *@
                            @product.Rating Stars (@product.ReviewCount)
                        </div>

                    </div>
                </a>
            }
        }
        else
        {
            <p>There are no products available in this category.</p>
        }
    </div>
</div>