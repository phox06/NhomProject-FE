@model IEnumerable<NhomProject.Models.Products>
@{
    ViewData["Title"] = "Home Page";
}
@* We can delete the <link href="~/Content/Site.css" ... /> line,
    because our new _Layout.cshtml file already loads it.
*@

<div class="container">
    <div class="swiper promo-carousel">
        <div class="swiper-wrapper">
            <!-- These image paths must be correct in your project -->
            <div class="swiper-slide" style="background-image: url('/images/1.png'); background-size: cover; background-position: center; ">
                <a href="#" class="carousel-link"></a>
            </div>
            <div class="swiper-slide" style="background-image: url('/images/2.png'); background-size: cover; background-position: center; ">
                <a href="#" class="carousel-link"></a>
            </div>
            <div class="swiper-slide" style="background-image: url('/Images/3.png'); background-size: cover; background-position: center; ">
                <a href="#" class="carousel-link"></a>
            </div>
        </div>
        <div class="swiper-pagination"></div>
        <div class="swiper-button-prev"></div>
        <div class="swiper-button-next"></div>
    </div>

    <h2 class="section-title">Flash Sale</h2>
    <div class="product-grid">
        @* I changed 'products' to 'product' for clarity *@
        @foreach (var product in Model)
        {
            <a href="@Url.Action("Details", "Home", new { id = product.ProductId })" class="product-card">

                <div class="product-card-image">
                    <img src="@Url.Content(product.ImageUrl)" alt="@product.Name" style="width: 100%; height: 100%; object-fit: cover;" />
                </div>

             
                <div class="product-card-body">
                    <h3 class="product-card-title">@product.Name</h3>

                    <div class="product-card-price">
                        @product.Price.ToString("C")

                        @if (product.OldPrice.HasValue && product.OldPrice.Value > product.Price)
                        {
                            <span class="product-card-price-old">
                                @product.OldPrice.Value.ToString("C")
                            </span>
                        }
                    </div>

                    <div class="product-card-rating">
                        @product.Rating Stars (@product.ReviewCount)
                    </div>
                </div>
            </a>
        }
    </div>
</div>
